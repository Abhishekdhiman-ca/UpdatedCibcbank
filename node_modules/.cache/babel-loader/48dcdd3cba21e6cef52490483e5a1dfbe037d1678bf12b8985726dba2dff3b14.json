{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Projects\\\\Cibcbank\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate, useLocation } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport HomePage from './HomePage';\nimport TransactionForm from './TransactionForm';\nimport ETransferForm from './ETransferForm';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport Footer from './Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allowedAccountNumbers = {\n  checking: '783783',\n  savings: '971971',\n  creditCard: '21212',\n  investment: '38686'\n};\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [balances, setBalances] = useState({\n    checking: 0,\n    savings: 0,\n    creditCard: 0,\n    investment: 0\n  });\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const contacts = ['Abhishek Dhiman', 'Sukhjeet Singh', 'Arpan Silwal', 'Nawaz Chowdhry', 'Surjeet Singh', 'Sejal Josan', 'Nabdeep Kaur', 'Jasdeep Kaur', 'Riya Mankotia'];\n  useEffect(() => {\n    const authState = localStorage.getItem('isAuthenticated');\n    if (authState) {\n      setIsAuthenticated(JSON.parse(authState));\n      const accountNumber = localStorage.getItem('accountNumber');\n      if (accountNumber) {\n        loadTransactions(accountNumber);\n      }\n    }\n    const lastVisitedRoute = localStorage.getItem('lastVisitedRoute');\n    if (lastVisitedRoute) {\n      window.history.replaceState(null, '', lastVisitedRoute);\n    }\n  }, []);\n  const saveTransactionToAPI = async transaction => {\n    try {\n      const response = await fetch('/api/saveTransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transaction)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save transaction');\n      }\n    } catch (error) {\n      console.error('Error saving transaction:', error);\n    }\n  };\n  const loadTransactions = async accountNumber => {\n    try {\n      const response = await fetch(`/api/getTransactions?accountNumber=${accountNumber}`);\n      if (response.ok) {\n        const transactions = await response.json();\n        setTransactions(transactions);\n        const newBalances = {\n          checking: 0,\n          savings: 0,\n          creditCard: 0,\n          investment: 0\n        };\n        transactions.forEach(transaction => {\n          if (transaction.type === 'deposit') {\n            newBalances[transaction.accountType] += transaction.amount;\n          } else if (transaction.type === 'withdraw' || transaction.type === 'etransfer') {\n            newBalances[transaction.accountType] -= transaction.amount;\n          }\n        });\n        setBalances(newBalances);\n      } else {\n        throw new Error('Failed to load transactions');\n      }\n    } catch (error) {\n      console.error('Error loading transactions:', error);\n    }\n  };\n  const handleTransaction = ({\n    accountNumber,\n    amount,\n    type,\n    accountType\n  }) => {\n    if (allowedAccountNumbers[accountType] !== accountNumber) {\n      alert('Incorrect account number for the specified account type.');\n      return;\n    }\n    const transaction = {\n      type,\n      accountNumber,\n      amount,\n      accountType,\n      timestamp: new Date().toLocaleString()\n    };\n    let newBalance;\n    if (type === 'deposit') {\n      newBalance = balances[accountType] + amount;\n    } else if (type === 'withdraw') {\n      if (balances[accountType] < amount) {\n        alert('Insufficient balance');\n        return;\n      }\n      newBalance = balances[accountType] - amount;\n    }\n    setBalances({\n      ...balances,\n      [accountType]: newBalance\n    });\n    setTransactions(prevTransactions => [...prevTransactions, transaction]);\n    saveTransactionToAPI(transaction); // Save transaction to API\n  };\n  const handleETransfer = ({\n    fromAccount,\n    toContact,\n    amount,\n    accountNumber\n  }) => {\n    if (balances[fromAccount] < amount) {\n      alert('Insufficient balance');\n      return;\n    }\n    const newBalance = balances[fromAccount] - amount;\n    const transaction = {\n      type: 'etransfer',\n      accountNumber: accountNumber || localStorage.getItem('accountNumber'),\n      // Use account number from local storage\n      amount,\n      accountType: fromAccount,\n      timestamp: new Date().toLocaleString()\n    };\n    setBalances({\n      ...balances,\n      [fromAccount]: newBalance\n    });\n    setTransactions(prevTransactions => [...prevTransactions, transaction]);\n    saveTransactionToAPI(transaction); // Save transaction to API\n  };\n  const handleLogin = accountNumber => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isAuthenticated', true);\n    localStorage.setItem('accountNumber', accountNumber);\n    loadTransactions(accountNumber); // Load transactions for logged-in user\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('accountNumber'); // Clear account number on logout\n    setTransactions([]); // Clear transactions on logout\n    setBalances({\n      checking: 0,\n      savings: 0,\n      creditCard: 0,\n      investment: 0\n    }); // Reset balances\n  };\n  const ProtectedRoute = ({\n    element\n  }) => {\n    return isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 40\n    }, this);\n  };\n  const RouteChangeHandler = () => {\n    _s();\n    const location = useLocation();\n    useEffect(() => {\n      localStorage.setItem('lastVisitedRoute', location.pathname);\n    }, [location]);\n    return null;\n  };\n  _s(RouteChangeHandler, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n    return [useLocation];\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isAuthenticated: isAuthenticated,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(RouteChangeHandler, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: /*#__PURE__*/_jsxDEV(HomePage, {\n                balances: balances,\n                transactions: transactions,\n                allowedAccountNumbers: allowedAccountNumbers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/deposit\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: /*#__PURE__*/_jsxDEV(TransactionForm, {\n                type: \"deposit\",\n                onSubmit: handleTransaction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/withdraw\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: /*#__PURE__*/_jsxDEV(TransactionForm, {\n                type: \"withdraw\",\n                onSubmit: handleTransaction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/etransfer\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: /*#__PURE__*/_jsxDEV(ETransferForm, {\n                contacts: contacts,\n                onSubmit: handleETransfer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 72\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin,\n              isAuthenticated: isAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"CJfmDyKUoCnKO2ZKm7C+ncy7VpY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","useLocation","Navbar","HomePage","TransactionForm","ETransferForm","Login","SignUp","Footer","jsxDEV","_jsxDEV","allowedAccountNumbers","checking","savings","creditCard","investment","App","_s2","_s","$RefreshSig$","balances","setBalances","transactions","setTransactions","isAuthenticated","setIsAuthenticated","contacts","authState","localStorage","getItem","JSON","parse","accountNumber","loadTransactions","lastVisitedRoute","window","history","replaceState","saveTransactionToAPI","transaction","response","fetch","method","headers","body","stringify","ok","Error","error","console","json","newBalances","forEach","type","accountType","amount","handleTransaction","alert","timestamp","Date","toLocaleString","newBalance","prevTransactions","handleETransfer","fromAccount","toContact","handleLogin","setItem","handleLogout","removeItem","ProtectedRoute","element","to","fileName","_jsxFileName","lineNumber","columnNumber","RouteChangeHandler","location","pathname","children","onLogout","className","path","onSubmit","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/abhis/Projects/Cibcbank/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate, useLocation } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport HomePage from './HomePage';\r\nimport TransactionForm from './TransactionForm';\r\nimport ETransferForm from './ETransferForm';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport Footer from './Footer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst allowedAccountNumbers = {\r\n  checking: '783783',\r\n  savings: '971971',\r\n  creditCard: '21212',\r\n  investment: '38686'\r\n};\r\n\r\nconst App = () => {\r\n  const [balances, setBalances] = useState({\r\n    checking: 0,\r\n    savings: 0,\r\n    creditCard: 0,\r\n    investment: 0,\r\n  });\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const contacts = [\r\n    'Abhishek Dhiman', 'Sukhjeet Singh', 'Arpan Silwal', 'Nawaz Chowdhry', \r\n    'Surjeet Singh', 'Sejal Josan', 'Nabdeep Kaur', 'Jasdeep Kaur', 'Riya Mankotia'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const authState = localStorage.getItem('isAuthenticated');\r\n    if (authState) {\r\n      setIsAuthenticated(JSON.parse(authState));\r\n      const accountNumber = localStorage.getItem('accountNumber');\r\n      if (accountNumber) {\r\n        loadTransactions(accountNumber);\r\n      }\r\n    }\r\n\r\n    const lastVisitedRoute = localStorage.getItem('lastVisitedRoute');\r\n    if (lastVisitedRoute) {\r\n      window.history.replaceState(null, '', lastVisitedRoute);\r\n    }\r\n  }, []);\r\n\r\n  const saveTransactionToAPI = async (transaction) => {\r\n    try {\r\n      const response = await fetch('/api/saveTransaction', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(transaction)\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save transaction');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving transaction:', error);\r\n    }\r\n  };\r\n\r\n  const loadTransactions = async (accountNumber) => {\r\n    try {\r\n      const response = await fetch(`/api/getTransactions?accountNumber=${accountNumber}`);\r\n      if (response.ok) {\r\n        const transactions = await response.json();\r\n        setTransactions(transactions);\r\n        const newBalances = { checking: 0, savings: 0, creditCard: 0, investment: 0 };\r\n        transactions.forEach(transaction => {\r\n          if (transaction.type === 'deposit') {\r\n            newBalances[transaction.accountType] += transaction.amount;\r\n          } else if (transaction.type === 'withdraw' || transaction.type === 'etransfer') {\r\n            newBalances[transaction.accountType] -= transaction.amount;\r\n          }\r\n        });\r\n        setBalances(newBalances);\r\n      } else {\r\n        throw new Error('Failed to load transactions');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading transactions:', error);\r\n    }\r\n  };\r\n\r\n  const handleTransaction = ({ accountNumber, amount, type, accountType }) => {\r\n    if (allowedAccountNumbers[accountType] !== accountNumber) {\r\n      alert('Incorrect account number for the specified account type.');\r\n      return;\r\n    }\r\n\r\n    const transaction = {\r\n      type,\r\n      accountNumber,\r\n      amount,\r\n      accountType,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n\r\n    let newBalance;\r\n    if (type === 'deposit') {\r\n      newBalance = balances[accountType] + amount;\r\n    } else if (type === 'withdraw') {\r\n      if (balances[accountType] < amount) {\r\n        alert('Insufficient balance');\r\n        return;\r\n      }\r\n      newBalance = balances[accountType] - amount;\r\n    }\r\n\r\n    setBalances({\r\n      ...balances,\r\n      [accountType]: newBalance\r\n    });\r\n\r\n    setTransactions(prevTransactions => [...prevTransactions, transaction]);\r\n    saveTransactionToAPI(transaction);  // Save transaction to API\r\n  };\r\n\r\n  const handleETransfer = ({ fromAccount, toContact, amount, accountNumber }) => {\r\n    if (balances[fromAccount] < amount) {\r\n      alert('Insufficient balance');\r\n      return;\r\n    }\r\n\r\n    const newBalance = balances[fromAccount] - amount;\r\n\r\n    const transaction = {\r\n      type: 'etransfer',\r\n      accountNumber: accountNumber || localStorage.getItem('accountNumber'), // Use account number from local storage\r\n      amount,\r\n      accountType: fromAccount,\r\n      timestamp: new Date().toLocaleString()\r\n    };\r\n\r\n    setBalances({\r\n      ...balances,\r\n      [fromAccount]: newBalance\r\n    });\r\n\r\n    setTransactions(prevTransactions => [...prevTransactions, transaction]);\r\n    saveTransactionToAPI(transaction);  // Save transaction to API\r\n  };\r\n\r\n  const handleLogin = (accountNumber) => {\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('isAuthenticated', true);\r\n    localStorage.setItem('accountNumber', accountNumber);\r\n    loadTransactions(accountNumber);  // Load transactions for logged-in user\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('isAuthenticated');\r\n    localStorage.removeItem('accountNumber'); // Clear account number on logout\r\n    setTransactions([]);  // Clear transactions on logout\r\n    setBalances({ checking: 0, savings: 0, creditCard: 0, investment: 0 });  // Reset balances\r\n  };\r\n\r\n  const ProtectedRoute = ({ element }) => {\r\n    return isAuthenticated ? element : <Navigate to=\"/login\" />;\r\n  };\r\n\r\n  const RouteChangeHandler = () => {\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('lastVisitedRoute', location.pathname);\r\n    }, [location]);\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar isAuthenticated={isAuthenticated} onLogout={handleLogout} />\r\n        <div className=\"container mt-4\">\r\n          <RouteChangeHandler />\r\n          <Routes>\r\n            <Route path=\"/\" element={<ProtectedRoute element={<HomePage balances={balances} transactions={transactions} allowedAccountNumbers={allowedAccountNumbers} />} />} />\r\n            <Route path=\"/deposit\" element={<ProtectedRoute element={<TransactionForm type=\"deposit\" onSubmit={handleTransaction} />} />} />\r\n            <Route path=\"/withdraw\" element={<ProtectedRoute element={<TransactionForm type=\"withdraw\" onSubmit={handleTransaction} />} />} />\r\n            <Route path=\"/etransfer\" element={<ProtectedRoute element={<ETransferForm contacts={contacts} onSubmit={handleETransfer} />} />} />\r\n            <Route path=\"/login\" element={<Login onLogin={handleLogin} isAuthenticated={isAuthenticated} />} />\r\n            <Route path=\"/signup\" element={<SignUp />} />\r\n          </Routes>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}